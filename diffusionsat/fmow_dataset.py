###########################################################################
# References:
# https://github.com/sustainlab-group/SatMAE
###########################################################################
import os
import pandas as pd
import numpy as np
import warnings
import random
from glob import glob

from typing import Any, Optional, List

import torch
from torch.utils.data.dataset import Dataset
from torchvision import transforms
from PIL import Image
import webdataset as wds

Image.MAX_IMAGE_PIXELS = None
warnings.simplefilter('ignore', Image.DecompressionBombWarning)

CATEGORIES = ["airport", "airport_hangar", "airport_terminal", "amusement_park",
              "aquaculture", "archaeological_site", "barn", "border_checkpoint",
              "burial_site", "car_dealership", "construction_site", "crop_field",
              "dam", "debris_or_rubble", "educational_institution", "electric_substation",
              "factory_or_powerplant", "fire_station", "flooded_road", "fountain",
              "gas_station", "golf_course", "ground_transportation_station", "helipad",
              "hospital", "impoverished_settlement", "interchange", "lake_or_pond",
              "lighthouse", "military_facility", "multi-unit_residential",
              "nuclear_powerplant", "office_building", "oil_or_gas_facility", "park",
              "parking_lot_or_garage", "place_of_worship", "police_station", "port",
              "prison", "race_track", "railway_bridge", "recreational_facility",
              "road_bridge", "runway", "shipyard", "shopping_mall",
              "single-unit_residential", "smokestack", "solar_farm", "space_facility",
              "stadium", "storage_tank", "surface_mine", "swimming_pool", "toll_booth",
              "tower", "tunnel_opening", "waste_disposal", "water_treatment_facility",
              "wind_farm", "zoo"]


class DatasetWrapper(Dataset):
    def __init__(self):
        pass


class SatelliteDataset(Dataset):
    """
    Abstract class.
    """

    def __init__(self, in_c):
        self.in_c = in_c

    @staticmethod
    def build_transform(is_train, input_size, mean, std):
        """
        Builds train/eval data transforms for the dataset class.
        :param is_train: Whether to yield train or eval data transform/augmentation.
        :param input_size: Image input size (assumed square image).
        :param mean: Per-channel pixel mean value, shape (c,) for c channels
        :param std: Per-channel pixel std. value, shape (c,)
        :return: Torch data transform for the input image before passing to model
        """
        # mean = IMAGENET_DEFAULT_MEAN
        # std = IMAGENET_DEFAULT_STD

        # train transform
        interpol_mode = transforms.InterpolationMode.BICUBIC

        t = []
        if is_train:
            t.append(transforms.ToTensor())
            t.append(transforms.Normalize(mean, std))
            t.append(
                transforms.RandomResizedCrop(input_size, scale=(0.2, 1.0), interpolation=interpol_mode),  # 3 is bicubic
            )
            t.append(transforms.RandomHorizontalFlip())
            return transforms.Compose(t)

        # eval transform
        if input_size <= 224:
            crop_pct = 224 / 256
        else:
            crop_pct = 1.0
        size = int(input_size / crop_pct)

        t.append(transforms.ToTensor())
        t.append(transforms.Normalize(mean, std))
        t.append(
            transforms.Resize(size, interpolation=interpol_mode),  # to maintain same ratio w.r.t. 224 images
        )
        t.append(transforms.CenterCrop(input_size))

        # t.append(transforms.Normalize(mean, std))
        return transforms.Compose(t)


class CustomDatasetFromImages(SatelliteDataset):
    mean = [0.4182007312774658, 0.4214799106121063, 0.3991275727748871]
    std = [0.28774282336235046, 0.27541765570640564, 0.2764017581939697]

    def __init__(self, csv_path, transform):
        """
        Creates Dataset for regular RGB image classification (usually used for fMoW-RGB dataset).
        :param csv_path: csv_path (string): path to csv file.
        :param transform: pytorch transforms for transforms and tensor conversion.
        """
        super().__init__(in_c=3)
        # Transforms
        self.transforms = transform
        # Read the csv file
        self.data_info = pd.read_csv(csv_path, header=0)
        # First column contains the image paths
        self.image_arr = np.asarray(self.data_info.iloc[:, 1])
        # Second column is the labels
        self.label_arr = np.asarray(self.data_info.iloc[:, 0])
        # Calculate len
        self.data_len = len(self.data_info.index)

    def __getitem__(self, index):
        # Get image name from the pandas df
        single_image_name = self.image_arr[index]
        # Open image
        img_as_img = Image.open(single_image_name)
        # Transform the image
        img_as_tensor = self.transforms(img_as_img)
        # Get label(class) of the image based on the cropped pandas column
        single_image_label = self.label_arr[index]

        return (img_as_tensor, single_image_label)

    def __len__(self):
        return self.data_len


CODE3 = {'AFG': 'Afghanistan',
         'ALA': 'Åland Islands',
         'ALB': 'Albania',
         'DZA': 'Algeria',
         'ASM': 'American Samoa',
         'AND': 'Andorra',
         'AGO': 'Angola',
         'AIA': 'Anguilla',
         'ATA': 'Antarctica',
         'ATG': 'Antigua and Barbuda',
         'ARG': 'Argentina',
         'ARM': 'Armenia',
         'ABW': 'Aruba',
         'AUS': 'Australia',
         'AUT': 'Austria',
         'AZE': 'Azerbaijan',
         'BHS': 'Bahamas',
         'BHR': 'Bahrain',
         'BGD': 'Bangladesh',
         'BRB': 'Barbados',
         'BLR': 'Belarus',
         'BEL': 'Belgium',
         'BLZ': 'Belize',
         'BEN': 'Benin',
         'BMU': 'Bermuda',
         'BTN': 'Bhutan',
         'BOL': 'Bolivia (Plurinational State of)',
         'BES': 'Bonaire, Sint Eustatius and Saba',
         'BIH': 'Bosnia and Herzegovina',
         'BWA': 'Botswana',
         'BVT': 'Bouvet Island',
         'BRA': 'Brazil',
         'IOT': 'British Indian Ocean Territory',
         'BRN': 'Brunei Darussalam',
         'BGR': 'Bulgaria',
         'BFA': 'Burkina Faso',
         'BDI': 'Burundi',
         'CPV': 'Cabo Verde',
         'KHM': 'Cambodia',
         'CMR': 'Cameroon',
         'CAN': 'Canada',
         'CYM': 'Cayman Islands',
         'CAF': 'Central African Republic',
         'TCD': 'Chad',
         'CHL': 'Chile',
         'CHN': 'China',
         'CXR': 'Christmas Island',
         'CCK': 'Cocos (Keeling) Islands',
         'COL': 'Colombia',
         'COM': 'Comoros',
         'COG': 'Congo',
         'COD': 'Congo, Democratic Republic of the',
         'COK': 'Cook Islands',
         'CRI': 'Costa Rica',
         'CIV': "Côte d'Ivoire",
         'HRV': 'Croatia',
         'CUB': 'Cuba',
         'CUW': 'Curaçao',
         'CYP': 'Cyprus',
         'CZE': 'Czechia',
         'DNK': 'Denmark',
         'DJI': 'Djibouti',
         'DMA': 'Dominica',
         'DOM': 'Dominican Republic',
         'ECU': 'Ecuador',
         'EGY': 'Egypt',
         'SLV': 'El Salvador',
         'GNQ': 'Equatorial Guinea',
         'ERI': 'Eritrea',
         'EST': 'Estonia',
         'SWZ': 'Eswatini',
         'ETH': 'Ethiopia',
         'FLK': 'Falkland Islands (Malvinas)',
         'FRO': 'Faroe Islands',
         'FJI': 'Fiji',
         'FIN': 'Finland',
         'FRA': 'France',
         'GUF': 'French Guiana',
         'PYF': 'French Polynesia',
         'ATF': 'French Southern Territories',
         'GAB': 'Gabon',
         'GMB': 'Gambia',
         'GEO': 'Georgia',
         'DEU': 'Germany',
         'GHA': 'Ghana',
         'GIB': 'Gibraltar',
         'GRC': 'Greece',
         'GRL': 'Greenland',
         'GRD': 'Grenada',
         'GLP': 'Guadeloupe',
         'GUM': 'Guam',
         'GTM': 'Guatemala',
         'GGY': 'Guernsey',
         'GIN': 'Guinea',
         'GNB': 'Guinea-Bissau',
         'GUY': 'Guyana',
         'HTI': 'Haiti',
         'HMD': 'Heard Island and McDonald Islands',
         'VAT': 'Holy See',
         'HND': 'Honduras',
         'HKG': 'Hong Kong',
         'HUN': 'Hungary',
         'ISL': 'Iceland',
         'IND': 'India',
         'IDN': 'Indonesia',
         'IRN': 'Iran (Islamic Republic of)',
         'IRQ': 'Iraq',
         'IRL': 'Ireland',
         'IMN': 'Isle of Man',
         'ISR': 'Israel',
         'ITA': 'Italy',
         'JAM': 'Jamaica',
         'JPN': 'Japan',
         'JEY': 'Jersey',
         'JOR': 'Jordan',
         'KAZ': 'Kazakhstan',
         'KEN': 'Kenya',
         'KIR': 'Kiribati',
         'PRK': "Korea (Democratic People's Republic of)",
         'KOR': 'Korea, Republic of',
         'KWT': 'Kuwait',
         'KGZ': 'Kyrgyzstan',
         'LAO': "Lao People's Democratic Republic",
         'LVA': 'Latvia',
         'LBN': 'Lebanon',
         'LSO': 'Lesotho',
         'LBR': 'Liberia',
         'LBY': 'Libya',
         'LIE': 'Liechtenstein',
         'LTU': 'Lithuania',
         'LUX': 'Luxembourg',
         'MAC': 'Macao',
         'MDG': 'Madagascar',
         'MWI': 'Malawi',
         'MYS': 'Malaysia',
         'MDV': 'Maldives',
         'MLI': 'Mali',
         'MLT': 'Malta',
         'MHL': 'Marshall Islands',
         'MTQ': 'Martinique',
         'MRT': 'Mauritania',
         'MUS': 'Mauritius',
         'MYT': 'Mayotte',
         'MEX': 'Mexico',
         'FSM': 'Micronesia (Federated States of)',
         'MDA': 'Moldova, Republic of',
         'MCO': 'Monaco',
         'MNG': 'Mongolia',
         'MNE': 'Montenegro',
         'MSR': 'Montserrat',
         'MAR': 'Morocco',
         'MOZ': 'Mozambique',
         'MMR': 'Myanmar',
         'NAM': 'Namibia',
         'NRU': 'Nauru',
         'NPL': 'Nepal',
         'NLD': 'Netherlands',
         'NCL': 'New Caledonia',
         'NZL': 'New Zealand',
         'NIC': 'Nicaragua',
         'NER': 'Niger',
         'NGA': 'Nigeria',
         'NIU': 'Niue',
         'NFK': 'Norfolk Island',
         'MKD': 'North Macedonia',
         'MNP': 'Northern Mariana Islands',
         'NOR': 'Norway',
         'OMN': 'Oman',
         'PAK': 'Pakistan',
         'PLW': 'Palau',
         'PSE': 'Palestine, State of',
         'PAN': 'Panama',
         'PNG': 'Papua New Guinea',
         'PRY': 'Paraguay',
         'PER': 'Peru',
         'PHL': 'Philippines',
         'PCN': 'Pitcairn',
         'POL': 'Poland',
         'PRT': 'Portugal',
         'PRI': 'Puerto Rico',
         'QAT': 'Qatar',
         'REU': 'Réunion',
         'ROU': 'Romania',
         'RUS': 'Russian Federation',
         'RWA': 'Rwanda',
         'BLM': 'Saint Barthélemy',
         'SHN': 'Saint Helena, Ascension and Tristan da Cunha',
         'KNA': 'Saint Kitts and Nevis',
         'LCA': 'Saint Lucia',
         'MAF': 'Saint Martin (French part)',
         'SPM': 'Saint Pierre and Miquelon',
         'VCT': 'Saint Vincent and the Grenadines',
         'WSM': 'Samoa',
         'SMR': 'San Marino',
         'STP': 'Sao Tome and Principe',
         'SAU': 'Saudi Arabia',
         'SEN': 'Senegal',
         'SRB': 'Serbia',
         'SYC': 'Seychelles',
         'SLE': 'Sierra Leone',
         'SGP': 'Singapore',
         'SXM': 'Sint Maarten (Dutch part)',
         'SVK': 'Slovakia',
         'SVN': 'Slovenia',
         'SLB': 'Solomon Islands',
         'SOM': 'Somalia',
         'ZAF': 'South Africa',
         'SGS': 'South Georgia and the South Sandwich Islands',
         'SSD': 'South Sudan',
         'ESP': 'Spain',
         'LKA': 'Sri Lanka',
         'SDN': 'Sudan',
         'SUR': 'Suriname',
         'SJM': 'Svalbard and Jan Mayen',
         'SWE': 'Sweden',
         'CHE': 'Switzerland',
         'SYR': 'Syrian Arab Republic',
         'TWN': 'Taiwan, Province of China',
         'TJK': 'Tajikistan',
         'TZA': 'Tanzania, United Republic of',
         'THA': 'Thailand',
         'TLS': 'Timor-Leste',
         'TGO': 'Togo',
         'TKL': 'Tokelau',
         'TON': 'Tonga',
         'TTO': 'Trinidad and Tobago',
         'TUN': 'Tunisia',
         'TUR': 'Turkey',
         'TKM': 'Turkmenistan',
         'TCA': 'Turks and Caicos Islands',
         'TUV': 'Tuvalu',
         'UGA': 'Uganda',
         'UKR': 'Ukraine',
         'ARE': 'United Arab Emirates',
         'GBR': 'United Kingdom of Great Britain and Northern Ireland',
         'USA': 'United States of America',
         'UMI': 'United States Minor Outlying Islands',
         'URY': 'Uruguay',
         'UZB': 'Uzbekistan',
         'VUT': 'Vanuatu',
         'VEN': 'Venezuela (Bolivarian Republic of)',
         'VNM': 'Viet Nam',
         'VGB': 'Virgin Islands (British)',
         'VIR': 'Virgin Islands (U.S.)',
         'WLF': 'Wallis and Futuna',
         'ESH': 'Western Sahara',
         'YEM': 'Yemen',
         'ZMB': 'Zambia',
         'ZWE': 'Zimbabwe'}

CODE2 = {'AF': 'Afghanistan',
         'AX': 'Åland Islands',
         'AL': 'Albania',
         'DZ': 'Algeria',
         'AS': 'American Samoa',
         'AD': 'Andorra',
         'AO': 'Angola',
         'AI': 'Anguilla',
         'AQ': 'Antarctica',
         'AG': 'Antigua and Barbuda',
         'AR': 'Argentina',
         'AM': 'Armenia',
         'AW': 'Aruba',
         'AU': 'Australia',
         'AT': 'Austria',
         'AZ': 'Azerbaijan',
         'BS': 'Bahamas',
         'BH': 'Bahrain',
         'BD': 'Bangladesh',
         'BB': 'Barbados',
         'BY': 'Belarus',
         'BE': 'Belgium',
         'BZ': 'Belize',
         'BJ': 'Benin',
         'BM': 'Bermuda',
         'BT': 'Bhutan',
         'BO': 'Bolivia (Plurinational State of)',
         'BQ': 'Bonaire, Sint Eustatius and Saba',
         'BA': 'Bosnia and Herzegovina',
         'BW': 'Botswana',
         'BV': 'Bouvet Island',
         'BR': 'Brazil',
         'IO': 'British Indian Ocean Territory',
         'BN': 'Brunei Darussalam',
         'BG': 'Bulgaria',
         'BF': 'Burkina Faso',
         'BI': 'Burundi',
         'CV': 'Cabo Verde',
         'KH': 'Cambodia',
         'CM': 'Cameroon',
         'CA': 'Canada',
         'KY': 'Cayman Islands',
         'CF': 'Central African Republic',
         'TD': 'Chad',
         'CL': 'Chile',
         'CN': 'China',
         'CX': 'Christmas Island',
         'CC': 'Cocos (Keeling) Islands',
         'CO': 'Colombia',
         'KM': 'Comoros',
         'CG': 'Congo',
         'CD': 'Congo, Democratic Republic of the',
         'CK': 'Cook Islands',
         'CR': 'Costa Rica',
         'CI': "Côte d'Ivoire",
         'HR': 'Croatia',
         'CU': 'Cuba',
         'CW': 'Curaçao',
         'CY': 'Cyprus',
         'CZ': 'Czechia',
         'DK': 'Denmark',
         'DJ': 'Djibouti',
         'DM': 'Dominica',
         'DO': 'Dominican Republic',
         'EC': 'Ecuador',
         'EG': 'Egypt',
         'SV': 'El Salvador',
         'GQ': 'Equatorial Guinea',
         'ER': 'Eritrea',
         'EE': 'Estonia',
         'SZ': 'Eswatini',
         'ET': 'Ethiopia',
         'FK': 'Falkland Islands (Malvinas)',
         'FO': 'Faroe Islands',
         'FJ': 'Fiji',
         'FI': 'Finland',
         'FR': 'France',
         'GF': 'French Guiana',
         'PF': 'French Polynesia',
         'TF': 'French Southern Territories',
         'GA': 'Gabon',
         'GM': 'Gambia',
         'GE': 'Georgia',
         'DE': 'Germany',
         'GH': 'Ghana',
         'GI': 'Gibraltar',
         'GR': 'Greece',
         'GL': 'Greenland',
         'GD': 'Grenada',
         'GP': 'Guadeloupe',
         'GU': 'Guam',
         'GT': 'Guatemala',
         'GG': 'Guernsey',
         'GN': 'Guinea',
         'GW': 'Guinea-Bissau',
         'GY': 'Guyana',
         'HT': 'Haiti',
         'HM': 'Heard Island and McDonald Islands',
         'VA': 'Holy See',
         'HN': 'Honduras',
         'HK': 'Hong Kong',
         'HU': 'Hungary',
         'IS': 'Iceland',
         'IN': 'India',
         'ID': 'Indonesia',
         'IR': 'Iran (Islamic Republic of)',
         'IQ': 'Iraq',
         'IE': 'Ireland',
         'IM': 'Isle of Man',
         'IL': 'Israel',
         'IT': 'Italy',
         'JM': 'Jamaica',
         'JP': 'Japan',
         'JE': 'Jersey',
         'JO': 'Jordan',
         'KZ': 'Kazakhstan',
         'KE': 'Kenya',
         'KI': 'Kiribati',
         'KP': "Korea (Democratic People's Republic of)",
         'KR': 'Korea, Republic of',
         'KW': 'Kuwait',
         'KG': 'Kyrgyzstan',
         'LA': "Lao People's Democratic Republic",
         'LV': 'Latvia',
         'LB': 'Lebanon',
         'LS': 'Lesotho',
         'LR': 'Liberia',
         'LY': 'Libya',
         'LI': 'Liechtenstein',
         'LT': 'Lithuania',
         'LU': 'Luxembourg',
         'MO': 'Macao',
         'MG': 'Madagascar',
         'MW': 'Malawi',
         'MY': 'Malaysia',
         'MV': 'Maldives',
         'ML': 'Mali',
         'MT': 'Malta',
         'MH': 'Marshall Islands',
         'MQ': 'Martinique',
         'MR': 'Mauritania',
         'MU': 'Mauritius',
         'YT': 'Mayotte',
         'MX': 'Mexico',
         'FM': 'Micronesia (Federated States of)',
         'MD': 'Moldova, Republic of',
         'MC': 'Monaco',
         'MN': 'Mongolia',
         'ME': 'Montenegro',
         'MS': 'Montserrat',
         'MA': 'Morocco',
         'MZ': 'Mozambique',
         'MM': 'Myanmar',
         'NR': 'Nauru',
         'NP': 'Nepal',
         'NL': 'Netherlands',
         'NC': 'New Caledonia',
         'NZ': 'New Zealand',
         'NI': 'Nicaragua',
         'NE': 'Niger',
         'NG': 'Nigeria',
         'NU': 'Niue',
         'NF': 'Norfolk Island',
         'MK': 'North Macedonia',
         'MP': 'Northern Mariana Islands',
         'NO': 'Norway',
         'OM': 'Oman',
         'PK': 'Pakistan',
         'PW': 'Palau',
         'PS': 'Palestine, State of',
         'PA': 'Panama',
         'PG': 'Papua New Guinea',
         'PY': 'Paraguay',
         'PE': 'Peru',
         'PH': 'Philippines',
         'PN': 'Pitcairn',
         'PL': 'Poland',
         'PT': 'Portugal',
         'PR': 'Puerto Rico',
         'QA': 'Qatar',
         'RE': 'Réunion',
         'RO': 'Romania',
         'RU': 'Russian Federation',
         'RW': 'Rwanda',
         'BL': 'Saint Barthélemy',
         'SH': 'Saint Helena, Ascension and Tristan da Cunha',
         'KN': 'Saint Kitts and Nevis',
         'LC': 'Saint Lucia',
         'MF': 'Saint Martin (French part)',
         'PM': 'Saint Pierre and Miquelon',
         'VC': 'Saint Vincent and the Grenadines',
         'WS': 'Samoa',
         'SM': 'San Marino',
         'ST': 'Sao Tome and Principe',
         'SA': 'Saudi Arabia',
         'SN': 'Senegal',
         'RS': 'Serbia',
         'SC': 'Seychelles',
         'SL': 'Sierra Leone',
         'SG': 'Singapore',
         'SX': 'Sint Maarten (Dutch part)',
         'SK': 'Slovakia',
         'SI': 'Slovenia',
         'SB': 'Solomon Islands',
         'SO': 'Somalia',
         'ZA': 'South Africa',
         'GS': 'South Georgia and the South Sandwich Islands',
         'SS': 'South Sudan',
         'ES': 'Spain',
         'LK': 'Sri Lanka',
         'SD': 'Sudan',
         'SR': 'Suriname',
         'SJ': 'Svalbard and Jan Mayen',
         'SE': 'Sweden',
         'CH': 'Switzerland',
         'SY': 'Syrian Arab Republic',
         'TW': 'Taiwan, Province of China',
         'TJ': 'Tajikistan',
         'TZ': 'Tanzania, United Republic of',
         'TH': 'Thailand',
         'TL': 'Timor-Leste',
         'TG': 'Togo',
         'TK': 'Tokelau',
         'TO': 'Tonga',
         'TT': 'Trinidad and Tobago',
         'TN': 'Tunisia',
         'TR': 'Turkey',
         'TM': 'Turkmenistan',
         'TC': 'Turks and Caicos Islands',
         'TV': 'Tuvalu',
         'UG': 'Uganda',
         'UA': 'Ukraine',
         'AE': 'United Arab Emirates',
         'GB': 'United Kingdom of Great Britain and Northern Ireland',
         'US': 'United States of America',
         'UM': 'United States Minor Outlying Islands',
         'UY': 'Uruguay',
         'UZ': 'Uzbekistan',
         'VU': 'Vanuatu',
         'VE': 'Venezuela (Bolivarian Republic of)',
         'VN': 'Viet Nam',
         'VG': 'Virgin Islands (British)',
         'VI': 'Virgin Islands (U.S.)',
         'WF': 'Wallis and Futuna',
         'EH': 'Western Sahara',
         'YE': 'Yemen',
         'ZM': 'Zambia',
         'ZW': 'Zimbabwe'}
